[{"C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\index.js":"1","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\App.js":"2","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\js\\serviceWorkerRegistration.js":"3","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\js\\reportWebVitals.js":"4","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\libs\\index.js":"5","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\data\\ExampleData.js":"6","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\data\\ExampleDataEdges.js":"7","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\data\\ExampleDataNodes.js":"8","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\libs\\components\\D3Network.js":"9","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\libs\\js\\Rectum.js":"10","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\libs\\js\\Simulation.js":"11","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\libs\\js\\Node.js":"12","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\libs\\js\\Edge.js":"13","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\libs\\js\\Geometry.js":"14"},{"size":855,"mtime":1638410398257,"results":"15","hashOfConfig":"16"},{"size":2039,"mtime":1643156386450,"results":"17","hashOfConfig":"16"},{"size":5201,"mtime":1638410398259,"results":"18","hashOfConfig":"16"},{"size":377,"mtime":1638410398258,"results":"19","hashOfConfig":"16"},{"size":150,"mtime":1638410398260,"results":"20","hashOfConfig":"16"},{"size":1022,"mtime":1638410398255,"results":"21","hashOfConfig":"16"},{"size":421,"mtime":1640259826805,"results":"22","hashOfConfig":"16"},{"size":1403,"mtime":1643090576680,"results":"23","hashOfConfig":"16"},{"size":248,"mtime":1638410398260,"results":"24","hashOfConfig":"16"},{"size":3446,"mtime":1640261488643,"results":"25","hashOfConfig":"16"},{"size":2135,"mtime":1640261631506,"results":"26","hashOfConfig":"16"},{"size":11627,"mtime":1643158879809,"results":"27","hashOfConfig":"16"},{"size":3909,"mtime":1640260289438,"results":"28","hashOfConfig":"16"},{"size":2944,"mtime":1643089349432,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dboxd9",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\index.js",[],"C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\App.js",["62","63"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport D3Network, { Rectum } from './libs/index.js';\r\n\r\nimport ExampleData from './data/ExampleData.js';\r\n\r\nconst rectum = new Rectum({\r\n    transform: {\r\n        k: 0.7,\r\n        x: 400.0,\r\n        y: 400.0,\r\n    },\r\n    callbacks: {\r\n        node: {\r\n            click: (d,e)=> {\r\n                console.log('click');\r\n                console.log([d,e]);\r\n            },\r\n            dblclick: (d,e)=> {\r\n                console.log('dblclick');\r\n                console.log([d,e]);\r\n            },\r\n        },\r\n    },\r\n    edge: {\r\n        width: 6,\r\n        color: '#333333',\r\n    },\r\n});\r\n\r\nconst style = {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    graph_area: {\r\n        width:  800 + (22*2),\r\n        height: 600 + (22*2),\r\n        background: '#eee',\r\n        padding: 22,\r\n        borderRadius: 5,\r\n    },\r\n};\r\n\r\nconst exdata = new ExampleData();\r\n\r\nexport default function App() {\r\n    const [rectum, setRectum] = useState(null);\r\n    const [graph_data, setGraphData] = useState({\r\n        nodes: exdata.makeData('nodes'),\r\n        edges: exdata.makeData('edges'),\r\n    });\r\n\r\n    useEffect(()=> {\r\n        if (rectum!==null) return;\r\n\r\n        setRectum(new Rectum({\r\n            transform: { k: 0.7, x: 400.0, y: 400.0 },\r\n            edge: { width: 6, color: '#333333' },\r\n            callbacks: {\r\n                node: {\r\n                    click: (node)=> {\r\n                        node.select = !node.select;\r\n                        setGraphData({...graph_data});\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n    }, [rectum]);\r\n\r\n    useEffect(()=> {\r\n        if (rectum)\r\n            rectum.data(graph_data);\r\n    }, [rectum, graph_data]);\r\n\r\n    if (!rectum) return null;\r\n\r\n    return (\r\n        <div style={style}>\r\n          <div style={style.graph_area}>\r\n            <D3Network rectum={rectum} />\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\js\\serviceWorkerRegistration.js",[],"C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\js\\reportWebVitals.js",[],"C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\libs\\index.js",[],"C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\data\\ExampleData.js",[],"C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\data\\ExampleDataEdges.js",[],"C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\data\\ExampleDataNodes.js",["64"],"class ExampleDataNodes {\r\n    defaultCircle (r) {\r\n        return {\r\n            r: r || 33,\r\n            fill: '#eeeeee',\r\n            stroke: { color: '#cccccc', width: 5 },\r\n        };\r\n    }\r\n    makeData () {\r\n        let defaultCircle = {\r\n            r: 33,\r\n            fill: '#eeeeee',\r\n            stroke: { color: '#cccccc', width: 3 },\r\n        };\r\n\r\n        return [\r\n            {\r\n                id: 1,\r\n                _class: 'NODE-A',\r\n                x: 0,\r\n                y: 0,\r\n                label: {\r\n                    text: 'Node #1',\r\n                    font: { size: 48 },\r\n                },\r\n                circle: this.defaultCircle(55),\r\n            },\r\n            {\r\n                id: 2,\r\n                _class: 'NODE-B',\r\n                x: 0,\r\n                y: 0,\r\n                move: 'freeze',\r\n                label: {\r\n                    text: 'Node #2',\r\n                    font: { size: 24 },\r\n                },\r\n                circle: this.defaultCircle(33),\r\n            },\r\n            {\r\n                id: 3,\r\n                _class: 'NODE-C',\r\n                x: 0,\r\n                y: 0,\r\n                label: {\r\n                    text: 'Node #3',\r\n                    font: { size: 36 },\r\n                },\r\n                circle: this.defaultCircle(44),\r\n            },\r\n        ];\r\n    }\r\n};\r\n\r\nexport default ExampleDataNodes;\r\n","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\libs\\components\\D3Network.js",["65","66"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Asshole from '@yanqirenshi/assh0le';\r\n\r\nexport default function D3Network (props) {\r\n    const rectum = props.rectum;\r\n\r\n    return <Asshole id=\"d3-network-graph\" rectum={rectum}/>;\r\n}\r\n","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\libs\\js\\Rectum.js",[],"C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\libs\\js\\Simulation.js",[],"C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\libs\\js\\Node.js",[],"C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\libs\\js\\Edge.js",["67"],"import * as d3 from 'd3';\r\n\r\nimport Geometry from './Geometry.js';\r\n\r\nclass EdgeCore {\r\n    constructor (params) {\r\n        // TODO: 回避措置コード。本来は line_color はデータに持たせるべき。\r\n        this.line_width = params.width || 6;\r\n        this.line_color = params.color || '#eeeeee';\r\n    }\r\n    makeDataLine (data) {\r\n        const line = {\r\n            stroke: {\r\n                width: this.line_width,\r\n                color: this.line_color,\r\n            },\r\n            filll: this.line_color,\r\n        };\r\n\r\n        if (!data)\r\n            return line;\r\n\r\n        if (data.width)\r\n            line.stroke.width = data.width;\r\n\r\n        return line;\r\n    }\r\n    makeData (data) {\r\n        if (data._edge)\r\n            return data._edge;\r\n\r\n        let out = {\r\n            source: data.source,\r\n            target: data.target,\r\n            line: this.makeDataLine(data.line),\r\n            // arrowhead: {},\r\n            _core: data,\r\n            id: data.id,\r\n        };\r\n\r\n        data._edge = out;\r\n\r\n        return out;\r\n    }\r\n}\r\n\r\n// https://totech.hateblo.jp/entry/2014/11/23/120003\r\nexport default class Edge extends EdgeCore {\r\n    constructor (params) {\r\n        super(params);\r\n\r\n        this.elements = null;\r\n\r\n        this.d3line = null;\r\n    }\r\n    init (params) {\r\n        // TODO: 回避措置コード。本来は line_color はデータに持たせるべき。\r\n        if (params.line_color)\r\n            this.line_color = params.line_color;\r\n\r\n        return this;\r\n    }\r\n    drawEdgeArrowhead (place) {\r\n        var marker = place\r\n            .append(\"defs\")\r\n            .append(\"marker\")\r\n            .attr('id', \"arrowhead\",)\r\n            .attr('refX', 0)\r\n            .attr('refY', 2)\r\n            .attr('markerWidth', 4)\r\n            .attr('markerHeight', 4)\r\n            .attr('orient', \"auto\");\r\n\r\n        marker.append(\"path\")\r\n            .attr('d', \"M 0,0 V 4 L4,2 Z\")\r\n            .attr('fill', this.line_color);\r\n    }\r\n    getD3Line () {\r\n        if (!this.d3line)\r\n            this.d3line = d3\r\n            .line()\r\n            .x(function(d) {\r\n                return d[0];\r\n            })\r\n            .y(function(d) {\r\n                return d[1];\r\n            });\r\n\r\n        return this.d3line;\r\n    }\r\n    draw (place, data) {\r\n        this.elements = place\r\n            .selectAll(\"path.ng-edge\")\r\n            .data(data, (d) => {\r\n                return d.id;\r\n            })\r\n            .enter()\r\n            .append('path')\r\n            .attr('class', 'ng-edge')\r\n            .attr(\"stroke-width\", (d) => {\r\n                return d.line.stroke.width;\r\n            })\r\n            .attr(\"stroke\", (d) => {\r\n                return this.line_color;\r\n            })\r\n            .attr( 'marker-end', \"url(#arrowhead)\");\r\n\r\n        return place.selectAll(\"path.ng-edge\");\r\n    }\r\n    tick (edges) {\r\n        if (!edges)\r\n            return;\r\n\r\n        const line = this.getD3Line();\r\n        const geo = new Geometry();\r\n\r\n        edges\r\n            .attr('d', (d) => {\r\n                let line_new = geo.lineOfNode2Node(d.source, d.target);\r\n\r\n                return line([\r\n                    [line_new.from.x, line_new.from.y],\r\n                    [line_new.to.x,   line_new.to.y],\r\n                ]);\r\n            })\r\n            .attr('stroke-dasharray', function (d) {\r\n                let edge_length = this.getTotalLength();\r\n                let ref1 = 8;\r\n\r\n                // TODO: geo.lineOfNode2Node で計算しているし不要かも。\r\n                // let r1 = d.source.circle.r / 2;\r\n                // let r2 = d.target.circle.r / 2;\r\n                let r1 = 0;\r\n                let r2 = 10;\r\n\r\n                let t = edge_length - (r1 + r2);\r\n\r\n                return t + \" \" + r2;\r\n            })\r\n            .attr('stroke-dashoffset', 0)\r\n            .attr('stroke-linecap', \"round\");\r\n    }\r\n}\r\n","C:\\Users\\Satoshi Iwasaki\\prj\\appl\\D3.Network\\dev\\src\\libs\\js\\Geometry.js",[],{"ruleId":"68","severity":1,"message":"69","line":7,"column":7,"nodeType":"70","messageId":"71","endLine":7,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":70,"column":8,"nodeType":"74","endLine":70,"endColumn":16,"suggestions":"75"},{"ruleId":"68","severity":1,"message":"76","line":10,"column":13,"nodeType":"70","messageId":"71","endLine":10,"endColumn":26},{"ruleId":"68","severity":1,"message":"77","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"78","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"79","line":128,"column":21,"nodeType":"70","messageId":"71","endLine":128,"endColumn":25},"no-unused-vars","'rectum' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'graph_data'. Either include it or remove the dependency array. You can also do a functional update 'setGraphData(g => ...)' if you only need 'graph_data' in the 'setGraphData' call.","ArrayExpression",["80"],"'defaultCircle' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'ref1' is assigned a value but never used.",{"desc":"81","fix":"82"},"Update the dependencies array to be: [graph_data, rectum]",{"range":"83","text":"84"},[1705,1713],"[graph_data, rectum]"]