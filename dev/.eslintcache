[{"C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\index.js":"1","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\js\\reportWebVitals.js":"2","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\js\\serviceWorkerRegistration.js":"3","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\App.js":"4","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\libs\\index.js":"5","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\data\\ExampleData.js":"6","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\data\\ExampleDataEdges.js":"7","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\libs\\components\\D3Network.js":"8","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\data\\ExampleDataNodes.js":"9","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\libs\\js\\Rectum.js":"10","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\libs\\js\\Simulation.js":"11","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\libs\\js\\Edge.js":"12","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\libs\\js\\Node.js":"13","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\libs\\js\\Geometry.js":"14"},{"size":855,"mtime":1634371919476,"results":"15","hashOfConfig":"16"},{"size":377,"mtime":1634371919476,"results":"17","hashOfConfig":"16"},{"size":5201,"mtime":1634371919477,"results":"18","hashOfConfig":"16"},{"size":1348,"mtime":1642900656178,"results":"19","hashOfConfig":"16"},{"size":150,"mtime":1638076634100,"results":"20","hashOfConfig":"16"},{"size":1022,"mtime":1634371919474,"results":"21","hashOfConfig":"16"},{"size":345,"mtime":1638080639557,"results":"22","hashOfConfig":"16"},{"size":248,"mtime":1638076493053,"results":"23","hashOfConfig":"16"},{"size":1403,"mtime":1639270073249,"results":"24","hashOfConfig":"16"},{"size":3435,"mtime":1639270073249,"results":"25","hashOfConfig":"16"},{"size":2121,"mtime":1638076322699,"results":"26","hashOfConfig":"16"},{"size":3589,"mtime":1639277309780,"results":"27","hashOfConfig":"16"},{"size":9607,"mtime":1642900606745,"results":"28","hashOfConfig":"16"},{"size":2944,"mtime":1639289404687,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1lu2rp3",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\index.js",[],["62","63"],"C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\js\\reportWebVitals.js",[],"C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\js\\serviceWorkerRegistration.js",[],"C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\App.js",["64"],"C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\libs\\index.js",[],"C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\data\\ExampleData.js",[],"C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\data\\ExampleDataEdges.js",[],"C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\libs\\components\\D3Network.js",["65","66"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Asshole from '@yanqirenshi/assh0le';\r\n\r\nexport default function D3Network (props) {\r\n    const rectum = props.rectum;\r\n\r\n    return <Asshole id=\"d3-network-graph\" rectum={rectum}/>;\r\n}\r\n","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\data\\ExampleDataNodes.js",["67"],"class ExampleDataNodes {\r\n    defaultCircle (r) {\r\n        return {\r\n            r: r || 33,\r\n            fill: '#eeeeee',\r\n            stroke: { color: '#888888', width: 1 },\r\n        };\r\n    }\r\n    makeData () {\r\n        let defaultCircle = {\r\n            r: 33,\r\n            fill: '#eeeeee',\r\n            stroke: { color: '#888888', width: 1 },\r\n        };\r\n\r\n        return [\r\n            {\r\n                id: 1,\r\n                _class: 'NODE-A',\r\n                x: 0,\r\n                y: 0,\r\n                label: {\r\n                    text: 'Node #1',\r\n                    font: { size: 48 },\r\n                },\r\n                circle: this.defaultCircle(55),\r\n            },\r\n            {\r\n                id: 2,\r\n                _class: 'NODE-B',\r\n                x: 0,\r\n                y: 0,\r\n                move: 'freeze',\r\n                label: {\r\n                    text: 'Node #2',\r\n                    font: { size: 24 },\r\n                },\r\n                circle: this.defaultCircle(33),\r\n            },\r\n            {\r\n                id: 3,\r\n                _class: 'NODE-C',\r\n                x: 0,\r\n                y: 0,\r\n                label: {\r\n                    text: 'Node #3',\r\n                    font: { size: 36 },\r\n                },\r\n                circle: this.defaultCircle(44),\r\n            },\r\n        ];\r\n    }\r\n};\r\n\r\nexport default ExampleDataNodes;\r\n","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\libs\\js\\Rectum.js",[],"C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\libs\\js\\Simulation.js",[],"C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\libs\\js\\Edge.js",["68"],"import * as d3 from 'd3';\r\n\r\nimport Geometry from './Geometry.js';\r\n\r\nclass EdgeCore {\r\n    constructor () {\r\n        // TODO: 回避措置コード。本来は line_color はデータに持たせるべき。\r\n        this.line_color = '#aaaaaa';\r\n    }\r\n    makeDataLine (data) {\r\n    }\r\n    makeData (data) {\r\n        if (data._edge)\r\n            return data._edge;\r\n\r\n        let out = {\r\n            source: data.source,\r\n            target: data.target,\r\n            line: {\r\n                stroke: {\r\n                    width: 8,\r\n                    color: this.line_color,\r\n                },\r\n                filll: this.line_color,\r\n            },\r\n            // arrowhead: {},\r\n            _core: data,\r\n            id: data.id,\r\n        };\r\n\r\n        data._edge = out;\r\n\r\n        return out;\r\n    }\r\n}\r\n\r\nexport default class Edge extends EdgeCore {\r\n    constructor () {\r\n        super();\r\n\r\n        this.elements = null;\r\n\r\n        this.d3line = null;\r\n    }\r\n    init (params) {\r\n        // TODO: 回避措置コード。本来は line_color はデータに持たせるべき。\r\n        if (params.line_color)\r\n            this.line_color = params.line_color;\r\n\r\n        return this;\r\n    }\r\n    drawEdgeArrowhead (place) {\r\n        var marker = place\r\n            .append(\"defs\")\r\n            .append(\"marker\")\r\n            .attr('id', \"arrowhead\",)\r\n            .attr('refX', 0)\r\n            .attr('refY', 2)\r\n            .attr('markerWidth', 4)\r\n            .attr('markerHeight', 4)\r\n            .attr('orient', \"auto\");\r\n\r\n        marker.append(\"path\")\r\n            .attr('d', \"M 0,0 V 4 L4,2 Z\")\r\n            .attr('fill', this.line_color);\r\n    }\r\n    getD3Line () {\r\n        if (!this.d3line)\r\n            this.d3line = d3\r\n            .line()\r\n            .x(function(d) {\r\n                return d[0];\r\n            })\r\n            .y(function(d) {\r\n                return d[1];\r\n            });\r\n\r\n        return this.d3line;\r\n    }\r\n    draw (place, data) {\r\n        this.elements = place\r\n            .selectAll(\"path.ng-edge\")\r\n            .data(data, (d) => {\r\n                return d.id;\r\n            })\r\n            .enter()\r\n            .append('path')\r\n            .attr('class', 'ng-edge')\r\n            .attr(\"stroke-width\", (d) => {\r\n                return d.line.stroke.width;\r\n            })\r\n            .attr(\"stroke\", (d) => {\r\n                return this.line_color;\r\n            })\r\n            .attr( 'marker-end', \"url(#arrowhead)\");\r\n\r\n        return place.selectAll(\"path.ng-edge\");\r\n    }\r\n    tick (edges) {\r\n        if (!edges)\r\n            return;\r\n\r\n        const line = this.getD3Line();\r\n        const geo = new Geometry();\r\n\r\n        edges\r\n            .attr('d', (d) => {\r\n                let line_new = geo.lineOfNode2Node(d.source, d.target);\r\n\r\n                return line([\r\n                    [line_new.from.x, line_new.from.y],\r\n                    [line_new.to.x,   line_new.to.y],\r\n                ]);\r\n            })\r\n            .attr('stroke-dasharray', function (d) {\r\n                let edge_length = this.getTotalLength();\r\n                let ref1 = 8;\r\n\r\n                // TODO: geo.lineOfNode2Node で計算しているし不要かも。\r\n                // let r1 = d.source.circle.r / 2;\r\n                // let r2 = d.target.circle.r / 2;\r\n                let r1 = 0;\r\n                let r2 = 10;\r\n\r\n                let t = edge_length - (r1 + r2);\r\n\r\n                return t + \" \" + r2;\r\n            })\r\n            .attr('stroke-dashoffset', 0)\r\n            .attr('stroke-linecap', \"round\");\r\n    }\r\n}\r\n","C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\libs\\js\\Node.js",[],"C:\\Users\\yanqi\\prj\\D3.Network\\dev\\src\\libs\\js\\Geometry.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":45,"column":24,"nodeType":"75","messageId":"76","endLine":45,"endColumn":36},{"ruleId":"73","severity":1,"message":"77","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"78","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"73","severity":1,"message":"79","line":10,"column":13,"nodeType":"75","messageId":"76","endLine":10,"endColumn":26},{"ruleId":"73","severity":1,"message":"80","line":117,"column":21,"nodeType":"75","messageId":"76","endLine":117,"endColumn":25},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'setGraphData' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'defaultCircle' is assigned a value but never used.","'ref1' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]